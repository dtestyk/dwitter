is_arrays_equal = function(arr1, arr2){
  if(arr1.length !== arr2.length) return false
  for(var i=0; i<arr1.length; i++){
    if(arr1[i] !== arr2[i]) return false
  }
  return true
}
is_array_symmetric = function(arr){
  var rev_arr=arr.slice().reverse()
  return is_arrays_equal(arr, rev_arr)
}
  
  window.log = console.log.bind(console)
  window.logg = Function.prototype.bind.bind(log, null)
  


function router(send, process, id, msg){
  var arr=msg.split(': ')
  var text=arr.pop()
  arr.unshift(id)

  var next = null
  var a = arr.slice()
  while(!is_array_symmetric(a)){
    next=a.pop()
  }

  if(next) send(next, msg)
  else process(text)
}

var route = router.bind(null, logg('send: '), logg('process: '))

route('a', 'b: some text') 
route('a', 'b: a: some text')
route('a', 'b: b: a: some text')
route('a', 'b: c: b: a: some text')
route('a', 'a: b: c: b: a: some text')
route('a', 'a: b: b: a: c: hhhh')
route('b', 'c: d: c: b: a: hhhh')
route('c', 'b: c: b: c: b: a: some text')
route('b', 'c: b: c: b: c: b: a: some text')
route('c', 'b: c: b: a: some text')
c: b: c: b: a: ggggg


msg=document.querySelector('#incoming > :last-child > span').originalText
id=my_id.value

  var arr=msg.split(': ')
  var text=arr.pop()
  arr.unshift(id)

  var next = null
  var a = arr.slice()
  while(!is_array_symmetric(a)){
    next=a.pop()
  }